{"version":3,"sources":["components/Result.js","components/SinglePlayer.js","components/MultiPlayer.js","components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["Result","Fragment","id","className","this","props","greetings","username","msg","React","Component","SinglePlayer","game","user","com","Math","floor","random","icon","1","2","3","console","log","setState","userIcon","comIcon","message","userScore","state","uWin","comScore","cWin","show","toUpperCase","onClick","MultiPlayer","Landing","single","land","multi","getUser","event","userName","target","value","length","errorMsg","formValid","type","placeholder","name","onChange","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dbd02908.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Result extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                \r\n                <div id=\"result\">\r\n                    <p className=\"text-center\">{this.props.greetings} {this.props.username}</p><br/>\r\n                    <p className=\"text-center\">{this.props.msg}</p>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport Result from \"./Result.js\"\r\n\r\nclass SinglePlayer extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={uWin:false,cWin:false,userScore:0,comScore:0,message:\"Let's start...\",userIcon:\"fa fa-handshake-o\",comIcon:\"fa fa-handshake-o\",show:false}\r\n    }\r\n\r\n   \r\n    game=(user)=>{\r\n        var com = Math.floor(Math.random() * 3) + 1;\r\n        var icon={1:\"far fa-hand-rock\",2:\"far fa-hand-paper\",3:\"far fa-hand-scissors\"}\r\n        console.log(com,user)\r\n        this.setState({userIcon:icon[user],comIcon:icon[com]})\r\n\r\n        if(com===user){\r\n          this.setState({message:\"It's a draw...!\"})\r\n        }\r\n        else if( (user===1&&com===3) || (user===2 && com===1) || (user===3&&com===2) ){        \r\n          this.setState({userScore:this.state.userScore+1,message:\"You got it...!\"})\r\n          if(this.state.userScore===19){\r\n            this.setState({uWin:true})           \r\n          }\r\n        }\r\n        else {\r\n          \r\n          this.setState({comScore:this.state.comScore+1,message:\"Ohh sorry...!\"})\r\n          if(this.state.comScore===19){\r\n            this.setState({cWin:true})\r\n          }\r\n        }\r\n    }\r\n  render() {\r\n    if(this.state.uWin){\r\n      return <Result username={this.props.user.toUpperCase()} greetings=\"Congartulations\" msg=\"You won the game..!\"></Result>        \r\n    }\r\n    else if(this.state.cWin){\r\n      return <Result username={this.props.user.toUpperCase()} greetings=\"Ohh Sorry\" msg=\"You lose the game..!\"></Result>\r\n    }\r\n    else{\r\n      return(\r\n        <React.Fragment>\r\n        <section id=\"single-game\">\r\n          <div className=\"text-center text-light heading col-md-4 offset-md-4\">\r\n            <h4>ROCK PAPER SCISSORS</h4>\r\n          </div>\r\n          <div id=\"score\" className=\"text-center\">\r\n            <span className=\"score-title\">{this.props.user.toUpperCase()}</span>\r\n            &nbsp;&nbsp;\r\n            <span id=\"score-card\">{this.state.userScore} - {this.state.comScore}</span>&nbsp;&nbsp;\r\n            <span className=\"score-title\">COM</span>\r\n          </div><br/>\r\n          <div id=\"screen\" className=\"container\">\r\n            <div className=\"col-md-4 offset-md-4 text-center screen\">\r\n               <div className=\"row\">\r\n               <div className=\"col-sm-6 user-screen\"><i className={this.state.userIcon}></i></div>\r\n                <div className=\"col-sm-6\"><i className={this.state.comIcon}></i></div>\r\n               </div>\r\n            </div>\r\n          </div><br/>\r\n          <div id=\"keys\" className=\"text-center container\">\r\n          <div className=\"col-md-4 offset-md-4 text-center keys\">\r\n          <button className=\"btn bt\"  onClick={()=>{this.game(1)}}><i className=\"far fa-hand-rock\"></i></button>\r\n              <button className=\"btn bt\"  onClick={()=>{this.game(2)}}><i className=\"far fa-hand-paper\"></i></button>\r\n              <button className=\"btn bt\"  onClick={()=>{this.game(3)}}><i className=\"far fa-hand-scissors\"></i></button>\r\n          </div>     \r\n          </div><br/>\r\n          <div id=\"msg\" className=\"text-center text-light container\">\r\n            <div className=\"col-md-4 offset-md-4 text-center msg\">\r\n            {this.state.message}\r\n            </div>\r\n          </div><br/>\r\n          \r\n        </section>\r\n      </React.Fragment>\r\n      )    \r\n      };\r\n    \r\n  }\r\n}\r\n\r\nexport default SinglePlayer;\r\n","import React from \"react\"\r\n\r\nclass MultiPlayer extends React.Component{\r\n    \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1>Multi player page</h1>\r\n                <br/>\r\n                <h3>Welcome {this.props.user.toUpperCase()}</h3><br/>\r\n                <h5>Under development</h5>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiPlayer","import React from \"react\";\r\nimport SinglePlayer from \"./SinglePlayer\";\r\nimport MultiPlayer from \"./MultiPlayer\";\r\n\r\nclass Landing extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      land: true,\r\n      single: false,\r\n      multi: false,\r\n      userName: \"\",\r\n      formValid:false,\r\n      errorMsg:\"\"\r\n    };\r\n  }\r\n  single = () => {\r\n    this.setState({ land: false, single: true });\r\n  };\r\n  multi = () => {\r\n    this.setState({ land: false, multi: true });\r\n  };\r\n  getUser = (event) => {\r\n    this.setState({ userName: event.target.value });\r\n    if(event.target.value.length<4){\r\n        this.setState({errorMsg:\"Please enter atleast 4 characters\",formValid:false})\r\n    }\r\n    else{\r\n        this.setState({errorMsg:\"\",formValid:true})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.land) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <div>\r\n                <h5>WELCOME TO</h5>\r\n                <h4>ROCK PAPER SCISSORS</h4> <br />\r\n                <form>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your name\"\r\n                      name=\"user\"\r\n                      onChange={this.getUser}\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      onClick={this.single}\r\n                      className=\"btn btn-danger form-control\" disabled={!this.state.formValid}\r\n                    >\r\n                      with Computer\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      onClick={this.multi}\r\n                      className=\"btn btn-primary form-control\" disabled={!this.state.formValid}\r\n                    >\r\n                      with Friends\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div id=\"errorMsg\" className=\"text-danger\">{this.state.errorMsg}</div>\r\n\r\n              </div>\r\n            </header>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else if (this.state.single) {\r\n      return <SinglePlayer user={this.state.userName}></SinglePlayer>;\r\n    } else {\r\n      return <MultiPlayer user={this.state.userName}></MultiPlayer>;\r\n    }\r\n  }\r\n}\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Landing from \"./components/Landing\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Landing></Landing>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}